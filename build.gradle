plugins {
    id 'java'
    id 'maven-publish'
    //id 'com.github.sherter.google-java-format' version '0.9'

    // download the RR tools which have no Maven Repository
    id "de.undercouch.download" version "4.1.2"

    id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.71.4"

    id "org.jetbrains.dokka" version "1.5.0"

    id "kr.motd.sphinx" version "2.10.0"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation project(':JSqlParser')
    //implementation 'com.github.jsqlparser:jsqlparser:4.3-SNAPSHOT'

    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.diogonunes:JColor:5.0.1'

    // https://mvnrepository.com/artifact/org.graalvm.sdk/graal-sdk
    implementation 'org.graalvm.sdk:graal-sdk:21.2.0'

    implementation 'commons-io:commons-io:2.8.0'
    implementation 'com.github.julianthome:inmemantlr-api:1.7.0'
    testImplementation 'junit:junit:4.12'
}

group = 'com.manticore-projects.jsqlformatter'
version = '0.1.9'
description = 'JSQLFormatter'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test)  {
    maxParallelForks = 100
    forkEvery = 1
}


task renderRR() {
    doLast {
        // these WAR files have been provided as a courtesy by Gunther Rademacher
        // and belong to the RR - Railroad Diagram Generator Project
        // https://github.com/GuntherRademacher/rr
        //
        // Hosting at manticore-projects.com is temporary until a better solution is found
        // Please do not use these files without Gunther's permission
        download {
            src 'http://manticore-projects.com/download/convert.war'
            dest "$buildDir/rr/convert.war"
            overwrite false
        }

        download {
            src 'http://manticore-projects.com/download/rr.war'
            dest "$buildDir/rr/rr.war"
            overwrite false
        }

        javaexec {
            standardOutput = new FileOutputStream("${buildDir}/rr/JSqlParserCC.ebnf")
            main="-jar";
            args = [
                    "$buildDir/rr/convert.war",
                    "${project(':JSQLParser').buildDir}/generated/jjtree/net/sf/jsqlparser/parser/JSqlParserCC.jj"
            ]
        }

        javaexec {
            main="-jar";
            args = [
                    "$buildDir/rr/rr.war",
                    "-noepsilon",
                    "-color:#4D88FF",
                    "-offset:0",
                    "-width:800",
                    //"-png",
                    //"-out:${buildDir}/rr/JSqlParserCC.zip",
                    "-out:$buildDir/sphinx/_static/JSqlParserCC.xhtml",
                    "$buildDir/rr/JSqlParserCC.ebnf"
            ]
        }
    }
}

task gitChangelogTask(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    fromRepo = file("$projectDir")
    file = new File("CHANGELOG.md")
    templateContent = """
 Changelog of JSQLParser.

{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasIssue}}
   {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
   {{^hasLink}}
### {{name}} {{issue}} {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
  {{/hasIssue}}
  {{^hasIssue}}
### {{name}}
  {{/hasIssue}}

  {{#commits}}
**{{{messageTitle}}}**

{{#messageBodyItems}}
 * {{.}}
{{/messageBodyItems}}

[{{hash}}](https://github.com/{{ownerName}}/{{repoName}}/commit/{{hash}}) {{authorName}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}
{{/tags}}
 """;
}

sphinx {
    //
    binaryUrl = "file:///usr/bin/sphinx-build"
    // Change the source directory.
    sourceDirectory = "${projectDir}/src/site/sphinx"
    // Change the output directorvalue2y.
    outputDirectory = "${project.buildDir}/sphinx"
    // Add environment variables.
    environments = [
            'artifactId': 'com.manticore-projects.jsqlformatter'
            , 'projectName': 'JSQLFormatter'
            , 'versionName': '0.1.9'
            , 'developerName': 'Andreas Reichel'
            , 'email_support': 'andreas@manticore-projects.com'
    ]
    env 'ENV_BAZ', 'value3'
    // Add tags.
    tags 'tagA', 'tagB'
}

